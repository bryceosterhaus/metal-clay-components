{"version":3,"sources":["../src/ChartBase.js"],"names":["PROP_NAME_MAP","axis","class","color","name","regions","type","x","ChartBase","attached","config","constructChartConfig_","bbChart","generate","on","handleColumnsChanged_","bind","handleGroupsChanged_","handleRegionsChanged_","handleSizeChanged_","handleTypeChanged_","handleXChanged_","constructAxisConfig_","state","getStateObj_","rotated","axisRotated","axisX","y2","axisY2","y","axisY","data","constructDataConfig_","zoom","constructZoomConfig_","area","bindto","element","line","padding","pie","point","resize","resizeAuto","size","spline","splineInterpolationType","subchart","svg","svgClassname","title","tooltip","transition","transitionDuration","oninit","emitChartEvent_","onout","onover","onrendered","onresize","onresized","constructColumnsConfig_","columns","createColumnsArray_","i","length","column","id","keys","Object","j","key","hide","push","attachListeners","colorFormatter","empty","emptyLabelText","groups","json","labels","mimeType","order","rows","selection","url","xFormat","xLocaltime","xSort","xs","columnsConfig","assign","onclick","onselect","onunselected","onzoom","onzoomend","onzoomstart","map","concat","emit","apply","arguments","getColumn_","find","prevVal","newVal","removedIds","resolveRemovedColumns_","unload","load","mapXSValues_","transform","reduce","xsValues","value","xColumn","newColumns","prevColumns","ids","indexOf","STATE","shapeOf","above","bool","zerobased","categories","array","extent","height","number","label","object","string","localtime","max","min","show","tick","centered","count","culling","fit","format","func","multiline","outer","rotate","values","width","oneOf","center","default","inner","inverted","bar","pattern","threshhold","unit","arrayOf","required","all","donut","ratio","expand","padAngle","setter","text","gauge","fullCircle","lable","startingAngle","units","grid","focus","lines","front","position","ticks","intersection","enabled","brighten","inputType","mouse","touch","legend","inset","anchor","step","connectNull","bottom","left","right","top","r","select","end","start","auto","draggable","grouped","isselectable","multiple","interpolation","onbrush","classname","contents","duration","rescale","bb","d3"],"mappings":"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","file":"ChartBase.js","sourcesContent":["'use strict';\n\nimport { Config } from 'metal-state';\nimport { bb, d3 } from 'billboard.js';\n\nimport types from './utils/types';\n\nconst PROP_NAME_MAP = {\n\taxis: 'axes',\n\tclass: 'classes',\n\tcolor: 'colors',\n\tname: 'names',\n\tregions: 'regions',\n\ttype: 'types',\n\tx: 'xs',\n};\n\n/**\n * Chart Base prototype.\n *\n * @mixin\n */\nconst ChartBase = {\n\t/**\n\t * @inheritDoc\n\t */\n\tattached: function() {\n\t\tconst config = this.constructChartConfig_();\n\n\t\tthis.bbChart = bb.generate(config);\n\n\t\tthis.on('columnsChanged', this.handleColumnsChanged_.bind(this));\n\t\tthis.on('groupsChanged', this.handleGroupsChanged_.bind(this));\n\t\tthis.on('regionsChanged', this.handleRegionsChanged_.bind(this));\n\t\tthis.on('sizeChanged', this.handleSizeChanged_.bind(this));\n\t\tthis.on('typeChanged', this.handleTypeChanged_.bind(this));\n\t\tthis.on('xChanged', this.handleXChanged_.bind(this));\n\t},\n\n\t/**\n\t * Constructs `axis` billboard config property.\n\t * @return {Object}\n\t * @protected\n\t */\n\tconstructAxisConfig_: function() {\n\t\tconst state = this.getStateObj_();\n\n\t\treturn {\n\t\t\trotated: state.axisRotated,\n\t\t\tx: state.axisX,\n\t\t\ty2: state.axisY2,\n\t\t\ty: state.axisY,\n\t\t};\n\t},\n\n\t/**\n\t * Constructs config object for `bb.generate` method.\n\t * @return {Object}\n\t * @protected\n\t */\n\tconstructChartConfig_: function() {\n\t\tconst state = this.getStateObj_();\n\n\t\tconst axis = this.constructAxisConfig_();\n\t\tconst data = this.constructDataConfig_();\n\t\tconst zoom = this.constructZoomConfig_();\n\n\t\tconst config = {\n\t\t\tarea: state.area,\n\t\t\taxis,\n\t\t\tbindto: this.element,\n\t\t\tcolor: state.color,\n\t\t\tdata,\n\t\t\tline: state.line,\n\t\t\tpadding: state.padding,\n\t\t\tpie: state.pie,\n\t\t\tpoint: state.point,\n\t\t\tregions: state.regions,\n\t\t\tresize: state.resizeAuto,\n\t\t\tsize: state.size,\n\t\t\tspline: state.splineInterpolationType,\n\t\t\tsubchart: state.subchart,\n\t\t\tsvg: state.svgClassname,\n\t\t\ttitle: state.title,\n\t\t\ttooltip: state.tooltip,\n\t\t\ttransition: state.transitionDuration,\n\t\t\tzoom,\n\t\t};\n\n\t\t/**\n\t\t * Chart init event.\n\t\t * @event chartInit\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.oninit = this.emitChartEvent_.bind(this, 'chartInit');\n\t\t/**\n\t\t * Chart mouse out event.\n\t\t * @event chartMouseout\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onout = this.emitChartEvent_.bind(this, 'chartMouseout');\n\t\t/**\n\t\t * Chart mouse over event.\n\t\t * @event chartMouseover\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onover = this.emitChartEvent_.bind(this, 'chartMouseover');\n\t\t/**\n\t\t * Chart rendered event.\n\t\t * @event chartRendered\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onrendered = this.emitChartEvent_.bind(this, 'chartRendered');\n\t\t/**\n\t\t * Chart resize event.\n\t\t * @event chartResize\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onresize = this.emitChartEvent_.bind(this, 'chartResize');\n\t\t/**\n\t\t * Chart resized event.\n\t\t * @event chartResized\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onresized = this.emitChartEvent_.bind(this, 'chartResized');\n\n\t\treturn config;\n\t},\n\n\t/**\n\t * Constructs various `data` billboard properties from columns state.\n\t * @return {Object}\n\t * @protected\n\t */\n\tconstructColumnsConfig_: function() {\n\t\tconst { columns } = this.getStateObj_();\n\n\t\tconst config = {\n\t\t\tcolumns: this.createColumnsArray_(columns),\n\t\t};\n\n\t\tfor (let i = 0; i < columns.length; i++) {\n\t\t\tconst column = columns[i];\n\n\t\t\tconst { id } = column;\n\n\t\t\tconst keys = Object.keys(column);\n\n\t\t\tfor (let j = 0; j < keys.length; j++) {\n\t\t\t\tconst key = keys[j];\n\n\t\t\t\tif (key === 'data' || key === 'id') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (key === 'hide') {\n\t\t\t\t\tconfig.hide = config.hide || [];\n\n\t\t\t\t\tif (column.hide) {\n\t\t\t\t\t\tconfig.hide.push(column.id);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconfig[PROP_NAME_MAP[key]] =\n\t\t\t\t\t\tconfig[PROP_NAME_MAP[key]] || {};\n\n\t\t\t\t\tconfig[PROP_NAME_MAP[key]][id] = column[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn config;\n\t},\n\n\t/**\n\t * Constructs `data` billboard config property.\n\t * @param {boolean} attachListeners\n\t * @return {Object}\n\t * @protected\n\t */\n\tconstructDataConfig_: function(attachListeners = true) {\n\t\tconst state = this.getStateObj_();\n\n\t\tconst config = {\n\t\t\tcolor: state.colorFormatter,\n\t\t\tempty: state.emptyLabelText,\n\t\t\tgroups: state.groups,\n\t\t\thide: state.hide,\n\t\t\tjson: state.json,\n\t\t\tkeys: state.keys,\n\t\t\tlabels: state.labels,\n\t\t\tmimeType: state.mimeType,\n\t\t\torder: state.order,\n\t\t\trows: state.rows,\n\t\t\tselection: state.selection,\n\t\t\ttype: state.type,\n\t\t\turl: state.url,\n\t\t\tx: state.x,\n\t\t\txFormat: state.xFormat,\n\t\t\txLocaltime: state.xLocaltime,\n\t\t\txSort: state.xSort,\n\t\t\txs: state.xs,\n\t\t};\n\n\t\tconst columnsConfig = this.constructColumnsConfig_();\n\n\t\tObject.assign(config, columnsConfig);\n\n\t\tif (attachListeners) {\n\t\t\t/**\n\t\t\t * Point click event.\n\t\t\t * @event pointClick\n\t\t\t * @memberof ChartBase\n\t\t\t */\n\t\t\tconfig.onclick = this.emitChartEvent_.bind(this, 'pointClick');\n\t\t\t/**\n\t\t\t * Point mouse out event.\n\t\t\t * @event pointMouseout\n\t\t\t * @memberof ChartBase\n\t\t\t */\n\t\t\tconfig.onout = this.emitChartEvent_.bind(this, 'pointMouseout');\n\t\t\t/**\n\t\t\t * Point mouse over event.\n\t\t\t * @event pointMouseoever\n\t\t\t * @memberof ChartBase\n\t\t\t */\n\t\t\tconfig.onover = this.emitChartEvent_.bind(this, 'pointMouseover');\n\t\t\t/**\n\t\t\t * Data select event.\n\t\t\t * @event dataSelect\n\t\t\t * @memberof ChartBase\n\t\t\t */\n\t\t\tconfig.onselect = this.emitChartEvent_.bind(this, 'dataSelect');\n\t\t\t/**\n\t\t\t * Data unselected event.\n\t\t\t * @event dataUnselected\n\t\t\t * @memberof ChartBase\n\t\t\t */\n\t\t\tconfig.onunselected = this.emitChartEvent_.bind(\n\t\t\t\tthis,\n\t\t\t\t'dataUnselected',\n\t\t\t);\n\t\t}\n\n\t\treturn config;\n\t},\n\n\t/**\n\t * Constructs `zoom` billboard config property.\n\t * @return {Object}\n\t * @protected\n\t */\n\tconstructZoomConfig_: function() {\n\t\tconst state = this.getStateObj_();\n\n\t\tconst zoom = state.zoom;\n\n\t\tconst config = zoom || {};\n\n\t\t/**\n\t\t * Zoom event.\n\t\t * @event zoom\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onzoom = this.emitChartEvent_.bind(this, 'zoom');\n\t\t/**\n\t\t * Zoom end event.\n\t\t * @event zoomEnd\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onzoomend = this.emitChartEvent_.bind(this, 'zoomEnd');\n\t\t/**\n\t\t * Zoom start event.\n\t\t * @event zoomStart\n\t\t * @memberof ChartBase\n\t\t */\n\t\tconfig.onzoomstart = this.emitChartEvent_.bind(this, 'zoomStart');\n\n\t\treturn config;\n\t},\n\n\t/**\n\t * Converts `columns` state into consumable array for billboard.js\n\t * @param {Array} columns\n\t * @return {Array}\n\t * @protected\n\t */\n\tcreateColumnsArray_: function(columns) {\n\t\treturn columns.map(({ data, id }) => {\n\t\t\treturn [id].concat(data);\n\t\t});\n\t},\n\n\t/**\n\t * Emits event based on arguments array.\n\t * @protected\n\t */\n\temitChartEvent_: function() {\n\t\tthis.emit.apply(this, arguments);\n\t},\n\n\t/**\n\t * Gets column by column id.\n\t * @param {string} id column id\n\t * @return {?Object}\n\t * @protected\n\t */\n\tgetColumn_: function(id) {\n\t\treturn this.columns.find(column => {\n\t\t\treturn column.id === id;\n\t\t});\n\t},\n\n\t/**\n\t * Retrieves state object, used to allow JSX implementation.\n\t * @return {Object}\n\t * @protected\n\t */\n\tgetStateObj_: function() {\n\t\treturn this;\n\t},\n\n\t/**\n\t * Maps `columns` state to chart via `bb.load` method.\n\t * @protected\n\t */\n\thandleColumnsChanged_: function({ prevVal }) {\n\t\tconst data = this.constructDataConfig_(false);\n\n\t\tconst newVal = data.columns;\n\t\tprevVal = this.createColumnsArray_(prevVal);\n\n\t\tconst removedIds = this.resolveRemovedColumns_(newVal, prevVal);\n\n\t\tif (removedIds.length) {\n\t\t\tdata.unload = removedIds;\n\t\t}\n\n\t\tthis.bbChart.load(data);\n\n\t\tif (data.xs) {\n\t\t\tthis.bbChart.xs(this.mapXSValues_(data.xs));\n\t\t}\n\t},\n\n\t/**\n\t * Maps `groups` state to chart via `bb.groups` method.\n\t * @protected\n\t */\n\thandleGroupsChanged_: function({ newVal }) {\n\t\tthis.bbChart.groups(newVal);\n\t},\n\n\t/**\n\t * Maps `regions` state to chart via `bb.regions` method.\n\t * @protected\n\t */\n\thandleRegionsChanged_: function({ newVal }) {\n\t\tthis.bbChart.regions(newVal);\n\t},\n\n\t/**\n\t * Maps `size` state to chart via `bb.resize` method.\n\t * @protected\n\t */\n\thandleSizeChanged_: function({ newVal }) {\n\t\tthis.bbChart.resize(newVal);\n\t},\n\n\t/**\n\t * Maps `type` state to chart via `bb.transform` method.\n\t * @protected\n\t */\n\thandleTypeChanged_: function({ newVal }) {\n\t\tthis.bbChart.transform(newVal);\n\t},\n\n\t/**\n\t * Maps `x` state to chart via `bb.x` method.\n\t * @protected\n\t */\n\thandleXChanged_: function({ newVal }) {\n\t\tconst { bbChart } = this;\n\n\t\tconst column = this.getColumn_(newVal);\n\n\t\tthis.bbChart.x(column.data);\n\t},\n\n\t/**\n\t * Maps xs value to data points.\n\t * @param {Object} xs\n\t * @return {Object}\n\t * @protected\n\t */\n\tmapXSValues_: function(xs) {\n\t\treturn Object.keys(xs).reduce((xsValues, key) => {\n\t\t\tconst value = xs[key];\n\n\t\t\tconst xColumn = this.getColumn_(value);\n\n\t\t\txsValues[key] = xColumn.data;\n\n\t\t\treturn xsValues;\n\t\t}, {});\n\t},\n\n\t/**\n\t * Determines which ids should be passed to the unload property.\n\t * @static\n\t * @param {Array} newColumns\n\t * @param {Array} prevColumns\n\t * @return {Array}\n\t */\n\tresolveRemovedColumns_: function(newColumns, prevColumns) {\n\t\tconst ids = newColumns.map(column => column[0]);\n\n\t\treturn prevColumns.reduce((removedIds, column) => {\n\t\t\tconst id = column[0];\n\n\t\t\tif (ids.indexOf(id) === -1) {\n\t\t\t\tremovedIds.push(id);\n\t\t\t}\n\n\t\t\treturn removedIds;\n\t\t}, []);\n\t},\n};\n\n/**\n * State definition.\n * @static\n * @type {!Object}\n */\nChartBase.STATE = {\n\t/**\n\t * Data that will be rendered to the chart.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tarea: Config.shapeOf({\n\t\tabove: Config.bool().value(false),\n\t\tzerobased: Config.bool().value(true),\n\t}),\n\n\t/**\n\t * Switches the x and y axis.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\taxisRotated: Config.bool(),\n\n\t/**\n\t * Styling and behavior of x axis.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\taxisX: Config.shapeOf({\n\t\tcategories: Config.array(),\n\t\textent: Config.array(),\n\t\theight: Config.number(),\n\t\tlabel: Config.object().string(),\n\t\tlocaltime: Config.bool(),\n\t\tmax: Config.number(),\n\t\tmin: Config.number(),\n\t\tpadding: Config.object(),\n\t\tshow: Config.bool(),\n\t\ttick: Config.shapeOf({\n\t\t\tcentered: Config.bool(),\n\t\t\tcount: Config.number(),\n\t\t\tculling: Config.bool().shapeOf({\n\t\t\t\tmax: Config.number(),\n\t\t\t}),\n\t\t\tfit: Config.bool(),\n\t\t\tformat: Config.func(),\n\t\t\tmultiline: Config.bool(),\n\t\t\touter: Config.bool(),\n\t\t\trotate: Config.number(),\n\t\t\tvalues: Config.array(),\n\t\t\twidth: Config.number(),\n\t\t}),\n\t\ttype: Config.oneOf(['category', 'indexed', 'timeseries']),\n\t}),\n\n\t/**\n\t * Styling and behavior of y2 axis.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\taxisY2: Config.shapeOf({\n\t\tcenter: Config.number(),\n\t\tdefault: Config.array(),\n\t\tinner: Config.bool(),\n\t\tinverted: Config.bool(),\n\t\tlabel: Config.object().string(),\n\t\tmax: Config.number(),\n\t\tmin: Config.number(),\n\t\tpadding: Config.number(),\n\t\tshow: Config.bool(),\n\t\ttick: Config.shapeOf({\n\t\t\tcount: Config.number(),\n\t\t\tformat: Config.func(),\n\t\t\touter: Config.bool(),\n\t\t\tvalues: Config.array(),\n\t\t}),\n\t}),\n\n\t/**\n\t * Styling and behavior of y axis.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\taxisY: Config.shapeOf({\n\t\tcenter: Config.number(),\n\t\tdefault: Config.array(),\n\t\tformat: Config.func(),\n\t\tinner: Config.bool(),\n\t\tinverted: Config.bool(),\n\t\tlabel: Config.object().string(),\n\t\tmax: Config.number(),\n\t\tmin: Config.number(),\n\t\tpadding: Config.object().string(),\n\t\tshow: Config.bool(),\n\t\ttick: Config.shapeOf({\n\t\t\tcount: Config.bool(),\n\t\t\touter: Config.bool(),\n\t\t\tvalues: Config.array(),\n\t\t}),\n\t\ttype: Config.oneOf(['category', 'indexed', 'timeseries']),\n\t}),\n\n\t/**\n\t * Styling and behavior of bars.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tbar: Config.shapeOf({\n\t\twidth: Config.number(),\n\t\tzerobased: Config.bool(),\n\t}),\n\n\t/**\n\t * Defines a custom color pattern for chart.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tcolor: Config.shapeOf({\n\t\tpattern: Config.array(),\n\t\tthreshhold: Config.shapeOf({\n\t\t\tunit: Config.string(),\n\t\t\tvalue: Config.array(),\n\t\t\tmax: Config.number(),\n\t\t}),\n\t}),\n\n\t/**\n\t * Sets billboard's data.color config.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Function|undefined}\n\t * @default undefined\n\t */\n\tcolorFormatter: Config.func(),\n\n\t/**\n\t * Data that will be rendered to the chart.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Array|undefined}\n\t * @default undefined\n\t */\n\tcolumns: Config.arrayOf(\n\t\tConfig.shapeOf({\n\t\t\taxis: Config.oneOf(['y', 'y2']),\n\t\t\tclass: Config.string(),\n\t\t\tcolor: Config.string(),\n\t\t\tdata: Config.array().required(),\n\t\t\thide: Config.bool(),\n\t\t\tid: Config.required().string(),\n\t\t\tname: Config.string(),\n\t\t\tregions: Config.array(),\n\t\t\ttype: Config.oneOf(types.all),\n\t\t\tx: Config.string(),\n\t\t}),\n\t),\n\n\t/**\n\t * Configuration options for donut chart.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tdonut: Config.shapeOf({\n\t\tlabel: Config.shapeOf({\n\t\t\tshow: Config.bool(),\n\t\t\tformat: Config.func(),\n\t\t\tthreshhold: Config.number(),\n\t\t\tratio: Config.func().number(),\n\t\t}),\n\t\texpand: Config.bool(),\n\t\twidth: Config.number(),\n\t\ttitle: Config.string(),\n\t\tpadAngle: Config.number(),\n\t}),\n\n\t/**\n\t * Sets label for when no data is loaded.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?string|undefined}\n\t * @default undefined\n\t */\n\temptyLabelText: Config.string().setter(value => {\n\t\treturn value\n\t\t\t? {\n\t\t\t\t\tempty: {\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\ttext: value,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t: value;\n\t}),\n\n\t/**\n\t * Configuration options for guage chart.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tgauge: Config.shapeOf({\n\t\tfullCircle: Config.bool(),\n\t\tlable: Config.shapeOf({\n\t\t\tshow: Config.bool(),\n\t\t\tformat: Config.func(),\n\t\t}),\n\t\texpand: Config.bool(),\n\t\tmin: Config.number(),\n\t\tmax: Config.number(),\n\t\tstartingAngle: Config.number(),\n\t\tunits: Config.string(),\n\t\twidth: Config.number(),\n\t}),\n\n\t/**\n\t * Configuration options for grid chart.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tgrid: Config.shapeOf({\n\t\t// Cross reference this with source code, have a feeling this info is wrong\n\t\tfocus: Config.shapeOf({\n\t\t\tshow: Config.bool(),\n\t\t}),\n\t\tlines: Config.shapeOf({\n\t\t\tfront: Config.bool(),\n\t\t}),\n\t\tx: Config.shapeOf({\n\t\t\tshow: Config.bool(),\n\t\t\tlines: Config.shapeOf({\n\t\t\t\tclass: Config.string(),\n\t\t\t\tposition: Config.oneOf(['start', 'middle', 'end']),\n\t\t\t\ttext: Config.string(),\n\t\t\t\tvalue: Config.string(),\n\t\t\t}),\n\t\t}),\n\t\ty: Config.shapeOf({\n\t\t\tshow: Config.bool(),\n\t\t\tlines: Config.shapeOf({\n\t\t\t\tclass: Config.string(),\n\t\t\t\tposition: Config.oneOf(['start', 'middle', 'end']),\n\t\t\t\ttext: Config.string(),\n\t\t\t\tvalue: Config.string(),\n\t\t\t}),\n\t\t}),\n\t\tticks: Config.number(),\n\t}),\n\n\t/**\n\t * Sets billboard's data.groups config.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Array|undefined}\n\t * @default undefined\n\t */\n\tgroups: Config.array(),\n\n\t/**\n\t * If set to true hides all data.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {boolean|undefined}\n\t * @default false\n\t */\n\thide: Config.bool().value(false),\n\n\t/**\n\t * Intersection display options.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tintersection: Config.shapeOf({\n\t\tenabled: Config.bool(),\n\t\tbrighten: Config.bool(),\n\t\tinputType: Config.shapeOf({\n\t\t\tmouse: Config.bool(),\n\t\t\ttouch: Config.bool(),\n\t\t}),\n\t}),\n\n\t/**\n\t * Sets billboard's data.json config.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Array|boolean|undefined}\n\t * @default undefined\n\t */\n\tjson: Config.array(),\n\n\t/**\n\t * Sets billboard's data.keys config.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Array|undefined}\n\t * @default undefined\n\t */\n\tkeys: Config.array().setter(value => {\n\t\treturn value\n\t\t\t? {\n\t\t\t\t\tvalue,\n\t\t\t\t}\n\t\t\t: value;\n\t}),\n\n\t/**\n\t * Sets billboard's data.labels config.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?boolean|function|undefined}\n\t * @default undefined\n\t */\n\tlabels: Config.bool()\n\t\t.func()\n\t\t.setter(value => {\n\t\t\tif (!value) {\n\t\t\t\treturn value;\n\t\t\t} else if (typeof value === 'boolean') {\n\t\t\t\treturn {\n\t\t\t\t\tlabels: value,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformat: value,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}),\n\n\t/**\n\t * Legend display options.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tlegend: Config.shapeOf({\n\t\thide: Config.bool(),\n\t\tposition: Config.oneOf(['bottom', 'inset', 'right']),\n\t\tinset: Config.shapeOf({\n\t\t\tanchor: Config.oneOf([\n\t\t\t\t'bottom-left',\n\t\t\t\t'bottom-right',\n\t\t\t\t'top-left',\n\t\t\t\t'top-right',\n\t\t\t]),\n\t\t\tstep: Config.number(),\n\t\t\tx: Config.number(),\n\t\t\ty: Config.number(),\n\t\t}),\n\t\tshow: Config.bool(),\n\t}),\n\n\t/**\n\t * Display settings for chart lines.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tline: Config.shapeOf({\n\t\tconnectNull: Config.bool(),\n\t\tstep: Config.shapeOf({\n\t\t\ttype: Config.oneOf(['step', 'step-after', 'step-before']),\n\t\t}),\n\t}),\n\n\t/**\n\t * Sets billboard's data.mimeType config.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?string|undefined}\n\t * @default undefined\n\t */\n\tmimeType: Config.string(),\n\n\t/**\n\t * Sets billboard's data.order config.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?string|undefined}\n\t * @default \"desc\"\n\t */\n\torder: Config.string().value('desc'),\n\n\t/**\n\t * Sets padding on chart.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tpadding: Config.shapeOf({\n\t\tbottom: Config.number(),\n\t\tleft: Config.number(),\n\t\tright: Config.number(),\n\t\ttop: Config.number(),\n\t}),\n\n\t/**\n\t * Configuration options for pie chart.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tpie: Config.shapeOf({\n\t\tlabel: Config.shapeOf({\n\t\t\tshow: Config.bool(),\n\t\t\tformat: Config.func(),\n\t\t\tthreshhold: Config.number(),\n\t\t\tratio: Config.func().number(),\n\t\t}),\n\t\texpand: Config.bool(),\n\t\tpadAngle: Config.number(),\n\t}),\n\n\t/**\n\t * Configuration options for chart points.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tpoint: Config.shapeOf({\n\t\tshow: Config.bool(),\n\t\tr: Config.number(),\n\t\tfocus: Config.shapeOf({\n\t\t\texpand: Config.shapeOf({\n\t\t\t\tenabled: Config.bool(),\n\t\t\t\tr: Config.bool(),\n\t\t\t}),\n\t\t\tselect: Config.shapeOf({\n\t\t\t\tr: Config.number(),\n\t\t\t}),\n\t\t}),\n\t}),\n\n\t/**\n\t * Creates custom regions on chart that can be styled.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tregions: Config.shapeOf({\n\t\tclass: Config.string(),\n\t\tenabled: Config.oneOf(['x', 'y']).required(),\n\t\tend: Config.array().required(),\n\t\tstart: Config.number().required(),\n\t}),\n\n\t/**\n\t * Determines if chart auto resizes when viewport size changes.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?boolean|undefined}\n\t * @default undefined\n\t */\n\tresizeAuto: Config.bool().setter(value => {\n\t\treturn value\n\t\t\t? {\n\t\t\t\t\tauto: value,\n\t\t\t\t}\n\t\t\t: value;\n\t}),\n\n\t/**\n\t * Load data from a multidimensional array. Sets billboard's `data.rows`\n\t * config.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?array|undefined}\n\t * @default undefined\n\t */\n\trows: Config.array(),\n\n\t/**\n\t * Sets billboard's `data.selection` config.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tselection: Config.shapeOf({\n\t\tdraggable: Config.bool(),\n\t\tenabled: Config.bool(),\n\t\tgrouped: Config.bool(),\n\t\tisselectable: Config.func(),\n\t\tmultiple: Config.bool(),\n\t}),\n\n\t/**\n\t * Sets size of chart.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tsize: Config.shapeOf({\n\t\theight: Config.number(),\n\t\twidth: Config.number(),\n\t}),\n\n\t/**\n\t * Determines interpolation type of spline charts.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?string|undefined}\n\t * @default undefined\n\t */\n\tsplineInterpolationType: Config.string().setter(value => {\n\t\treturn value\n\t\t\t? {\n\t\t\t\t\tinterpolation: {\n\t\t\t\t\t\ttype: value,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t: value;\n\t}),\n\n\t/**\n\t * Config options for subcharts.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tsubchart: Config.shapeOf({\n\t\tshow: Config.bool(),\n\t\tsize: Config.shapeOf({\n\t\t\theight: Config.number(),\n\t\t}),\n\t\tonbrush: Config.func(),\n\t}),\n\n\t/**\n\t * Customizes classname for svg element.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?string|undefined}\n\t * @default undefined\n\t */\n\tsvgClassname: Config.string().setter(value => {\n\t\treturn value\n\t\t\t? {\n\t\t\t\t\tclassname: value,\n\t\t\t\t}\n\t\t\t: value;\n\t}),\n\n\t/**\n\t * Display options for title element.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\ttitle: Config.shapeOf({\n\t\ttext: Config.string(),\n\t\tpadding: Config.shapeOf({\n\t\t\tbottom: Config.number(),\n\t\t\tleft: Config.number(),\n\t\t\tright: Config.number(),\n\t\t\ttop: Config.number(),\n\t\t}),\n\t\tposition: Config.string(),\n\t}),\n\n\t/**\n\t * Display options for tooltip.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\ttooltip: Config.shapeOf({\n\t\tshow: Config.bool(),\n\t\tgrouped: Config.bool(),\n\t\tformat: Config.shapeOf({\n\t\t\tname: Config.func(),\n\t\t\ttitle: Config.func(),\n\t\t\tvalue: Config.func(),\n\t\t}),\n\t\tcontents: Config.func(),\n\t}),\n\n\t/**\n\t * Sets duration of transitions.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?number|undefined}\n\t * @default undefined\n\t */\n\ttransitionDuration: Config.number().setter(value => {\n\t\treturn value\n\t\t\t? {\n\t\t\t\t\tduration: value,\n\t\t\t\t}\n\t\t\t: value;\n\t}),\n\n\t/**\n\t * The variety of chart that will be rendered.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?string|undefined}\n\t * @default line\n\t */\n\ttype: Config.oneOf(types.all).value('line'),\n\n\t/**\n\t * Load a CSV or JSON file from a URL.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?string|undefined}\n\t * @default undefined\n\t */\n\turl: Config.string(),\n\n\t/**\n\t * Sets billboard's data.x config.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?string|undefined}\n\t * @default undefined\n\t */\n\tx: Config.string(),\n\n\t/**\n\t * Sets billboard's data.xFormat config.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?string|undefined}\n\t * @default undefined\n\t */\n\txFormat: Config.string(),\n\n\t/**\n\t * Sets billboard's data.xLocaltime config.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {boolean|undefined}\n\t * @default undefined\n\t */\n\txLocaltime: Config.bool(),\n\n\t/**\n\t * Sets billboard's data.xSort config.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\txSort: Config.bool(),\n\n\t/**\n\t * Configuration for bb chart zoom capabilities.\n\t * @instance\n\t * @memberof ChartBase\n\t * @type {?Object|undefined}\n\t * @default undefined\n\t */\n\tzoom: Config.shapeOf({\n\t\tenabled: Config.bool().value(true),\n\t\trescale: Config.bool().value(false),\n\t\textent: Config.array(),\n\t}),\n};\n\nexport { bb, d3, ChartBase };\nexport default ChartBase;\n"]}