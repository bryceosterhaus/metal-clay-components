{"version":3,"sources":["../src/DonutChart.js"],"names":["DonutChart","STATE","columns","arrayOf","shapeOf","axis","oneOf","class","string","color","data","array","required","hide","bool","id","name","regions","type","percentage","x","value","register"],"mappings":"AAAA;;;;;;;AAEA;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;;IAIMA,U;;;;;;;;;;;;AAENA,WAAWC,KAAX,GAAmB;AAClB;;;;;;;AAOAC,UAAS,mBAAOC,OAAP,CACR,mBAAOC,OAAP,CAAe;AACdC,QAAM,mBAAOC,KAAP,CAAa,CAAC,GAAD,EAAM,IAAN,CAAb,CADQ;AAEdC,SAAO,mBAAOC,MAAP,EAFO;AAGdC,SAAO,mBAAOD,MAAP,EAHO;AAIdE,QAAM,mBAAOC,KAAP,GAAeC,QAAf,EAJQ;AAKdC,QAAM,mBAAOC,IAAP,EALQ;AAMdC,MAAI,mBAAOH,QAAP,GAAkBJ,MAAlB,EANU;AAOdQ,QAAM,mBAAOR,MAAP,EAPQ;AAQdS,WAAS,mBAAON,KAAP,EARK;AASdO,QAAM,mBAAOZ,KAAP,CAAa,gBAAMa,UAAnB,CATQ;AAUdC,KAAG,mBAAOZ,MAAP;AAVW,EAAf,CADQ,CARS;;AAuBlB;;;;;;;AAOAU,OAAM,mBAAOZ,KAAP,CAAa,gBAAMa,UAAnB,EAA+BE,KAA/B,CAAqC,OAArC;AA9BY,CAAnB;;AAiCA,mBAAIC,QAAJ,CAAatB,UAAb;;QAESA,U,GAAAA,U;kBACMA,U","file":"DonutChart.js","sourcesContent":["'use strict';\n\nimport { Config } from 'metal-state';\nimport Soy from 'metal-soy';\n\nimport Chart from './Chart';\nimport templates from './DonutChart.soy.js';\nimport types from './utils/types';\n\n/**\n * Donut Chart component.\n * @augments Chart\n */\nclass DonutChart extends Chart {}\n\nDonutChart.STATE = {\n\t/**\n\t * Data that will be rendered to the chart.\n\t * @instance\n\t * @memberof DonutChart\n\t * @type {?Array|undefined}\n\t * @default []\n\t */\n\tcolumns: Config.arrayOf(\n\t\tConfig.shapeOf({\n\t\t\taxis: Config.oneOf(['y', 'y2']),\n\t\t\tclass: Config.string(),\n\t\t\tcolor: Config.string(),\n\t\t\tdata: Config.array().required(),\n\t\t\thide: Config.bool(),\n\t\t\tid: Config.required().string(),\n\t\t\tname: Config.string(),\n\t\t\tregions: Config.array(),\n\t\t\ttype: Config.oneOf(types.percentage),\n\t\t\tx: Config.string(),\n\t\t}),\n\t),\n\n\t/**\n\t * The variety of chart that will be rendered.\n\t * @instance\n\t * @memberof DonutChart\n\t * @type {?string|undefined}\n\t * @default donut\n\t */\n\ttype: Config.oneOf(types.percentage).value('donut'),\n};\n\nSoy.register(DonutChart, templates);\n\nexport { DonutChart };\nexport default DonutChart;\n"]}